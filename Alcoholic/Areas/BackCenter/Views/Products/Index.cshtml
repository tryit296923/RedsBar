@{
    ViewData["Title"] = "商品管理";
    Layout = "~/Areas/BackCenter/Views/Shared/_Layout.cshtml";
}
<style>
    .order-2 {
        order: 2;
        margin-left: 10vh;
    }
    .nullShow{
        visibility: hidden;
    }
</style>
<div id="prod">
    <div class="productmanage container-fluid p-5">
        <div class="spacebetween row-cols-2 mb-3">
            <h3>商品管理</h3>
            <button type="button" class="addbtn" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                <i class="fa-sharp fa-solid fa-plus"></i> 新增商品
            </button>
        </div>
        <hr>
        <div class="products">
            <div class="scrollPage">
                <table class="table">
                    <thead>
                        <tr>
                            <th class="col-3" scope="col" colspan="2">商品內容</th>
                            <th class="col-1" scope="col">成本</th>
                            <th class="col-1" scope="col">售價</th>
                            <th class="col-1" scope="col">優惠等級</th>
                            <th class="col-4" scope="col">特色</th>
                            <th class="col-1" scope="col">編輯</th>
                            <th class="col-1" scope="col">刪除</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="item in product">
                            <th scope="row"><img :src="item.path" alt=""></th>
                            <td>{{item.name}}</td>
                            <td>{{item.cost}}</td>
                            <td>{{item.price}}</td>
                            <td>{{item.discountName}}</td>
                            <td>{{item.description}}</td>
                            <td>
                                <button :id="item.id" class="btnproducts" data-bs-toggle="modal" data-bs-target="#editProd" @@click="[seleEdit($event)]"><i class="fa-solid fa-pen-to-square"></i></button>
                            </td>
                            <td>
                                <button :id="item.id" :name="item.name" class="btnproducts" @@click="sendDelete"><i class="fa-solid fa-trash"></i></button>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <!-- Edit Modal -->
    <div class="modal fade" id="editProd" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="editProdLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header editproducttitle">
                    <h3 class="modal-title">編輯商品</h3>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                            aria-label="Close" @@click="refreshPage"></button>
                </div>
                <div class="modal-body container productEditing">
                    <div class="row">
                        <div class="col-12 my-2">
                            <label for="productPic">圖片：</label>
                            <img class="modal-image" :src="editProductData.imagesrc" />
                        </div>
                        <div class="col-12 my-2">
                            <label for="productName" class="form-label">商品名稱：</label>
                            <input type="text" class="form-control w-100" id=" productName" v-model="editProductData.productName" required>
                        </div>
                        <div class="col-6 my-2">
                            <label for="productCost" class="form-label">商品成本：</label>
                            <input type="number" class="form-control w-100" placeholder="NTD" id="productCost" v-model="editProductData.productCost" min="0" required>
                        </div>
                        <div class="col-6 my-2">
                            <label for="productPrice" class="form-label">商品售價：</label>
                            <input type="number" class="form-control w-100" placeholder="NTD" id="productPrice" v-model="editProductData.productPrice" min="0" required>
                        </div>
                        <div class="col-12 my-2">
                            <label for="productDescription" class="form-label">商品敘述：</label>
                            <input type="text" class="form-control w-100" placeholder="請簡述特色" id="productDescription" v-model="editProductData.productDescription" required>
                        </div>
                        <div id="multipleselect" class="col-12 ">
                            <div class="col-12 ">
                                <label class="my-2">折扣：</label>
                                <multiselect v-model="discount" placeholder="請選擇折扣" label="discountName" track-by="discountId" :options="allDiscount" :allow-empty="false">
                                    <template slot="singleLabel" slot-scope="props">  <span>{{ props.option.discountName }}</span></template>
                                    <template slot="option" slot-scope="props">
                                        <div><span>{{ props.option.discountName }}</span></div>
                                    </template>
                                </multiselect>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row m-0">
                        <button class=" col btneaddcancel m-1" :name="name" type="button" data-bs-dismiss="modal" @@click="refreshPage"><i class="fa-solid fa-square-xmark"></i> 離開編輯</button>
                        <button class=" col btneditproducts m-1" :name="name" type="button" @@click="sendEdit"><i class="fa-solid fa-square-check"></i> 儲存編輯</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<!-- Create Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header addproducttitle">
                <h3 class="modal-title" id="staticBackdropLabel">新增商品</h3>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close" @@click="refreshPage"></button>
            </div>
            <div class="modal-body container addingPage">
                <div class="row">
                    <div class="col-12 my-2">
                        <label for="productPic">圖片：</label><label ><i class="fa-solid fa-pen">必填</i></label>
                        <vue-dropzone ref="myVueDropzone" id="basezone" :options="dropzoneOptions"
                                      v-on:vdropzone-files-added="fileAdd"></vue-dropzone>
                    </div>
                    <div class="col-12 my-2">
                        <label for="productName" class="form-label">商品名稱：</label><label :class="{'nullShow':filled.productName}"><i class="fa-solid fa-pen">必填</i></label>
                        <input type="text" class="form-control w-100" id=" productName" v-model="createProductData.productName">
                    </div>
                    <div class="col-6 my-2">
                        <label for="productCost" class="form-label">商品成本：</label><label :class="{'nullShow':filled.productCost}"><i class="fa-solid fa-pen">必填</i></label>
                        <input type="number" class="form-control w-100" placeholder="NTD" id="productCost" v-model="createProductData.productCost" min="0">
                    </div>
                    <div class="col-6 my-2">
                        <label for="productPrice" class="form-label">商品售價：</label><label :class="{'nullShow':filled.productPrice}"><i class="fa-solid fa-pen">必填</i></label>
                        <input type="number" class="form-control w-100" placeholder="NTD" id="productPrice" v-model="createProductData.productPrice" min="0">
                    </div>
                    <div class="col-12 my-2">
                        <label for="productDescription" class="form-label">商品敘述：</label><label :class="{'nullShow':filled.productDescription}"><i class="fa-solid fa-pen">必填</i></label>
                        <input type="text" class="form-control w-100" placeholder="請簡述特色" id="productDescription" v-model="createProductData.productDescription">
                    </div>
                    <div id="multipleselect" >
                        <div class="col-12 my-2">
                            <label class="my-2">成分：</label>
                            <multiselect v-model="basevalue" tag-placeholder="Add this as new tag"
                                         placeholder="最多選4種":max="4" label="materialName" track-by="materialId" :options="selection"
                                         :multiple="true" :taggable="true" @@tag="addTag"></multiselect>
                        </div>
                    </div>
                        <div class="col-12 my-2">
                            <label >成分用量：</label>
                            </div>
                            <div class="col-6 py-0 my-1">
                                <label class="form-label py-0">{{baseConsumption[0].materialName}}</label>
                                <input type="number" class="form-control w-100" v-model="baseConsumption[0].consumption" />
                            </div>
                            <div class="col-6 py-0 my-1">
                                <label class="form-label py-0">{{baseConsumption[1].materialName}}</label>
                                <input type="number" class="form-control w-100" v-model="baseConsumption[1].consumption" />
                            </div>
                            <div class="col-6 py-0 my-1">
                                <label class="form-label py-0">{{baseConsumption[2].materialName}}</label>
                                <input type="number" class="form-control w-100" v-model="baseConsumption[2].consumption" />
                            </div>
                    <div class="col-6 py-0 my-1">
                        <label class="form-label py-0">{{baseConsumption[3].materialName}}</label>
                                <input type="number" class="form-control w-100" v-model="baseConsumption[3].consumption" />
                            </div>
                        
                        <div class="col-12 ">
                            <label class="my-2">折扣：</label>
                            <multiselect v-model="discountvalue" deselect-label="無法移除" track-by="discountId"
                                         label="discountName" placeholder="請選擇折扣" :options="allDiscount" :searchable="false"
                                         :allow-empty="false">
                                <template slot="singleLabel"
                                          slot-scope="{ option }"><strong>{{option.discountName}}</strong> </template>
                            </multiselect>
                        </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row m-0">
                    <button class=" col btneaddcancel m-1" type="button" data-bs-dismiss="modal" @@click="refreshPage"><i class="fa-solid fa-square-xmark"></i> 取消新增</button>
                    <button class=" col btneditproducts m-1" type="button" v-on:click="send"><i class="fa-solid fa-square-check"></i> 新增商品</button>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- SWAL -->
<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    let allProds = [];

    let prod = new Vue({
        el: "#prod",
        data: {
            product: [],
            vueid: "",
            imagesrc: "",
            name: "",
            cost: "",
            price: "",
            description: "",
            allDiscount: [],
            discount: { discountId: '', discountName: '' },
            editProductData: {
                productId: "",
                imagesrc: "",
                productName: "",
                productPrice: "",
                productCost: "",
                productDescription: "",
            },
        },
        components: {
            Multiselect: window.VueMultiselect.default
        },
        methods: {
            seleEdit: function (e) {
                var editData = this.editProductData;
                //將點選的資料帶入到modal畫面
                for (i = 0; i < this.product.length; i++) {
                    if (e.currentTarget.id == this.product[i].id) {
                        editData.productId = this.product[i].id;
                        editData.imagesrc = this.product[i].path;
                        editData.productName = this.product[i].name;
                        this.name = this.product[i].name;
                        editData.productPrice = this.product[i].price;
                        editData.productCost = this.product[i].cost;
                        editData.productDescription = this.product[i].description;
                        this.discount = {
                            discountId: this.product[i].discountId,
                            discountName: this.product[i].discountName
                        }
                    }
                }

            },
            //送出編輯資料
            sendEdit: function (e) {
                let self = this;
                var selProd = e.currentTarget
                var data = new FormData();
                Swal.fire({
                    title: '編輯!',
                    text: '確定要編輯商品' + selProd.name + '嗎?',
                    icon: 'warning',
                    showDenyButton: true,
                    confirmButtonText: '確認',
                    denyButtonText: '拒絕',
                    customClass: {
                        actions: 'my-actions',
                        denyButton: 'order-2',
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        let data = new FormData();
                        data.append("ProductId", this.editProductData.productId)
                        data.append("ProductName", this.editProductData.productName)
                        data.append("Cost", this.editProductData.productCost)
                        data.append("UnitPrice", this.editProductData.productPrice)
                        data.append("ProductDescription", this.editProductData.productDescription)
                        data.append("DiscountId", this.discount.discountId)
                        fetch("/api/Products/EditProduct", {
                            method: 'PUT',
                            body: data
                        });
                        fetch("/api/Products/GetAllBackProducts")
                            .then((response) => response.json())
                            .then((result) => { self.product = result; allProds = result; console.log(self.product) });
                        Swal.fire('編輯成功!', '', 'success');
                    } else if (result.isDenied) {
                        Swal.fire('取消編輯!', '', 'info')
                    }
                })

            },
            //送出刪除資料
            sendDelete: function (e) {
                var selProd = e.currentTarget
                Swal.fire({
                    title: '刪除!',
                    text: '確定要刪除商品' + selProd.name + '嗎?',
                    icon: 'warning',
                    showDenyButton: true,
                    confirmButtonText: '確認',
                    denyButtonText: '拒絕',
                    customClass: {
                        actions: 'my-actions',
                        denyButton: 'order-2',
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch("/api/Products/DeleteProduct", {
                            method: 'DELETE',
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(selProd.id)
                        })
                        Swal.fire('成功刪除!', '', 'success')
                        setInterval(function () { window.location.reload()}, 1200);
                    } else if (result.isDenied) {
                        Swal.fire('取消刪除!', '', 'info')
                    }
                })
            },
            refreshPage: function () {
                window.location.reload();
            }
        },
        //取得產品資訊以進行渲染
        mounted: function () {
            let self = this;
            fetch("/api/Products/GetAllBackProducts")
                .then((response) => response.json())
                .then((result) => { self.product = result; allProds = result; });
            fetch("/api/Discount/GetDiscount")
                .then(response => response.json())
                .then(result => this.allDiscount = result.concat())
        }

    })
    let app = new Vue({
        el: "#staticBackdrop",
        data: {
            product: [],
            allDiscount: [],
            filled:{
                productName:false,
                productPrice:false,
                productCost:false,
                productDescription:false,
            },
            createProductData: {
                productName: "",
                productPrice: "",
                productCost: "",
                productDescription: "",
                images: [],
                discountId:"",
            },
            fileRecords: [
                {
                    "name": "Some Invalid.exe",
                    "size": 8165824,
                    "type": "application/vnd.microsoft.portable-executable",
                    "ext": "exe",
                },
                {
                    "name": "Golf.mp4",
                    "lastModified": 1576563996233,
                    "sizeText": "549 KB",
                    "size": 561813,
                    "type": "video/mp4",
                    "ext": "mp4",
                    "dimensions": {
                        "width": 640,
                        "height": 360
                    },
                    "url": "https://safrazik.github.io/vue-file-agent/website/assets/files/Golf.mp4",
                    "videoThumbnail": "https://safrazik.github.io/vue-file-agent/website/assets/files/Golf-thumb.jpg",
                    "imageColor": [66, 62, 45]
                },
                {
                    "name": "Some Large File.zip",
                    "size": 25165824, // 24 MB
                    "type": "application/zip",
                    "ext": "zip",
                },
            ],
            dropzoneOptions: {
                url: 'https://httpbin.org/post',
                thumbnailWidth: 150,
                maxFilesize: 0.5,
                autoProcessQueue: false,
                addRemoveLinks: true,
                headers: { "My-Awesome-Header": "header value" }
            },
            selection:[],
            basevalue: [],
            baseConsumption:[
                { Id: "1", materialId: "", materialName:"成分1",consumption:"" },
                { Id: "2", materialId: "", materialName:"成分2",consumption:"" },
                { Id: "3", materialId: "", materialName:"成分3",consumption:"" },
                { Id: "4", materialId: "", materialName:"成分4",consumption:"" },
            ],
            discountvalue: "",
        },
        components: {
            "vueDropzone": vue2Dropzone,
            Multiselect: window.VueMultiselect.default
        },
        methods: {
            fileAdd: function (file) {
                document.querySelectorAll(".dz-progress").forEach(x => x.remove())
            },
            send: function () {
                Swal.fire({
                    title: '新增!',
                    text: '請確認新增的商品訊息無誤',
                    icon: 'warning',
                    showDenyButton: true,
                    confirmButtonText: '確認',
                    denyButtonText: '拒絕',
                    customClass: {
                        actions: 'my-actions',
                        denyButton: 'order-2',
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        let data = new FormData();
                        data.append("ProductName", this.createProductData.productName)
                        data.append("Cost", this.createProductData.productCost)
                        data.append("UnitPrice", this.createProductData.productPrice)
                        data.append("ProductDescription", this.createProductData.productDescription)
                        data.append("DiscountId", this.discountvalue.discountId)
                        var img = this.$refs.myVueDropzone.getQueuedFiles();
                        img.forEach(x => data.append("Images", x));
                        
                        fetch("/api/Products/CreateProduct", {
                            method: 'POST',
                            //headers: { "Content-Type": "multipart/form-data" },
                            body: data
                        })
                         .then(e => e.json())
                            .then(result => {
                                switch (result.status) {
                                    case 0: {
                                        Swal.fire('新增成功!', '', 'success');
                                        this.$refs.myVueDropzone.removeAllFiles();
                                        this.createProductData.productName = "";
                                        this.createProductData.productPrice = "";
                                        this.createProductData.productCost = "";
                                        this.createProductData.productDescription = "";
                                        this.createProductData.images = [];
                                        this.discountvalue = "";
                                    }
                                        break;
                                    case 400: {
                                        Swal.fire('尚未添加圖片!', '', 'error');
                                    }
                                        break;
                                }
                            })
                    } else if (result.isDenied) {
                        Swal.fire('取消新增!', '', 'info')
                    }
                })

            },
            addTag(newTag) {
                const tag = {
                    name: newTag,
                    code: newTag.substring(0, 2) + Math.floor((Math.random() * 10000000))
                }
                this.options.push(tag)
                this.value.push(tag)
            },
            refreshPage: function () {
                window.location.reload();
            }
        },
        mounted: function () {
            let self = this;
            fetch("/api/Products/GetAllBackProducts")
                .then((response) => response.json())
                .then((result) => { self.product = result });
            fetch("/api/Discount/GetDiscount")
                .then(response => response.json())
                .then(result => self.allDiscount = result);
            fetch("/api/Products/GetMaterialCategory")
                .then(response => response.json())
                .then(result => self.selection = result);
        },
        watch: {
            'createProductData.productName': function (n, o) {
                if (n != "") {
                    this.filled.productName = true;
                }
                else {
                    this.filled.productName = false;
                }
            },
            'createProductData.productPrice': function (n, o) {
                if (n != 0) {
                    this.filled.productPrice = true;
                }
                else {
                    this.filled.productPrice = false;
                }
            },
            'createProductData.productCost': function (n, o) {
                if (n != 0) {
                    this.filled.productCost = true;
                }
                else {
                    this.filled.productCost = false;
                }
            },
            'createProductData.productDescription': function (n, o) {
                if (n != "") {
                    this.filled.productDescription = true;
                }
                else {
                    this.filled.productDescription = false;
                }
            },
            'basevalue':function(n,o){
                for (i=0;i<n.length;i++){
                    this.baseConsumption[i]=n[i]
                }

            },
        }
    })
</script>