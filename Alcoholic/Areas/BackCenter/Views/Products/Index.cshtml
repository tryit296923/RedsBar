@{
    ViewData["Title"] = "商品管理";
    Layout = "~/Areas/BackCenter/Views/Shared/_Layout.cshtml";
}

<style>
    .addproducttitle, .editproducttitle {
        background-color: #842029;
    }

        .addproducttitle h3, .editproducttitle h3{
        color: white;
    }
    /*表格*/
    img {
        width: 100px;
    }
    .productmanage thead{
        background-color: rgb(215, 215, 215);
        color: #444;
        height: 30px;
        line-height: 30px;
    }


    .productmanage tbody tr:hover{
        background-color: rgb(241, 241, 241);
    }

    .products button{
        line-height: 24px;
    }

    .products tr{
        text-align: center;
    }
    /* 商品管理 */
    .addproduct {
        display: flex;
    }

    .productAdding {
        display: flex;
        flex-direction: column;
    }

    .productmanage {
        position: relative;
    }


    .multiselect__tag {
        background-color: #C28C2E
    }

    .multiselect__tag-icon {
        color: white
    }
</style>
<div id="prod">
<div class="productmanage container-fluid p-5">
    <div class="spacebetween row-cols-2 mb-3">
        <h3>商品管理</h3>
        <button type="button" class="addbtn" data-bs-toggle="modal" data-bs-target="#staticBackdrop">
            <i class="fa-sharp fa-solid fa-plus"></i> 新增商品
        </button>
    </div>
    <hr>
    <div class="products">
        <table class="table">
            <thead>
                <tr>
                    <th class="col-4" scope="col" colspan="2">商品內容</th>
                    <th class="col-1" scope="col">成本</th>
                    <th class="col-1" scope="col">售價</th>
                    <th class="col-4" scope="col">特色</th>
                    <th class="col-1" scope="col">編輯</th>
                    <th class="col-1" scope="col">刪除</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in product">
                    <th scope="row"><img :src="item.path" alt=""></th>
                    <td>{{item.name}}</td>
                    <td>{{item.cost}}</td>
                    <td>{{item.price}}</td>
                    <td>{{item.description}}</td>
                    <td>
                        <button :id="item.id" class="btnproducts" data-bs-toggle="modal" data-bs-target="#editProd" @@click="seleEdit"><i class="fa-solid fa-pen-to-square"></i></button>
                    </td>
                    <td>
                    <button class="btnproducts"><i class="fa-solid fa-trash"></i></button>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    </div>
    <!-- Edit Modal -->
    <div class="modal fade" id="editProd" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="editProdLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header editproducttitle">
                    <h3 class="modal-title" id="editProd">編輯商品</h3>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                            aria-label="Close"></button>
                </div>
                <div class="modal-body container productEditing">
                    <div class="row">
                        <div class="col-12 my-2">
                            <label for="productPic">圖片：</label>
                            <img class="modal-image" :src="imagesrc" />
                        </div>
                        <div class="col-12 my-2">
                            <label for="productName" class="form-label">商品名稱：</label>
                            <input type="text" class="form-control w-100" id=" productName" v-model="name" required>
                        </div>
                        <div class="col-6 my-2">
                            <label for="productCost" class="form-label">商品成本：</label>
                            <input type="number" class="form-control w-100" placeholder="NTD" id="productCost" v-model="cost" min="0" required>
                        </div>
                        <div class="col-6 my-2">
                            <label for="productPrice" class="form-label">商品售價：</label>
                            <input type="number" class="form-control w-100" placeholder="NTD" id="productPrice" v-model="price" min="0" required>
                        </div>
                        <div class="col-12 my-2">
                            <label for="productDescription" class="form-label">商品敘述：</label>
                            <input type="text" class="form-control w-100" placeholder="請簡述特色" id="productDescription" v-model="description" required>
                        </div>
                        <div id="multipleselect" class="col-12 ">
                                <div class="col-12 ">
                                <label class="my-2">折扣：</label>
                                <multiselect v-model="discount" placeholder="請選擇折扣" label="discountName" track-by="discountId" :options="discountOpt"  :allow-empty="false">
                                    <template slot="singleLabel" slot-scope="props">  <span>{{ props.option.discountName }}</span></template>
                                    <template slot="option" slot-scope="props">
                                        <div><span>{{ props.option.discountName }}</span></div>
                                    </template>
                                </multiselect>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="row m-0">
                        <button class=" col btneaddcancel m-1" type="button" data-bs-dismiss="modal"><i class="fa-solid fa-square-xmark"></i> 離開編輯</button>
                        <button class=" col btneditproducts m-1" type="button" v-on:click="send"><i class="fa-solid fa-square-check"></i> 儲存編輯</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


<!-- Create Modal -->
<div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
     aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header addproducttitle">
                <h3 class="modal-title" id="staticBackdropLabel">新增商品</h3>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"
                        aria-label="Close"></button>
            </div>
            <div class="modal-body container productAdding">
                <div class="row">
                    <div class="col-12 my-2">
                        <label for="productPic">圖片：</label>
                        <vue-dropzone ref="myVueDropzone" id="basezone" :options="dropzoneOptions"
                        v-on:vdropzone-files-added="fileAdd"></vue-dropzone>
                    </div>
                    <div class="col-12 my-2">
                        <label for="productName" class="form-label">商品名稱：</label>
                        <input type="text" class="form-control w-100" id=" productName" v-model="createProductData.productName" required>
                    </div>
                    <div class="col-6 my-2">
                        <label for="productCost" class="form-label">商品成本：</label>
                        <input type="number" class="form-control w-100" placeholder="NTD" id="productCost" v-model="createProductData.productCost" min="0" required>
                    </div>
                    <div class="col-6 my-2">
                        <label for="productPrice" class="form-label">商品售價：</label>
                        <input type="number" class="form-control w-100" placeholder="NTD" id="productPrice" v-model="createProductData.productPrice" min="0" required>
                    </div>
                    <div class="col-12 my-2">
                        <label for="productDescription" class="form-label">商品敘述：</label>
                        <input type="text" class="form-control w-100" placeholder="請簡述特色" id="productDescription" v-model="createProductData.productDescription" required>
                    </div>
                    <div id="multipleselect" class="col-12 ">
                        <div class="col-12 my-2">
                            <label class="my-2">基酒：</label>
                            <multiselect v-model="basevalue" tag-placeholder="Add this as new tag"
                                         placeholder="請選擇至少一種基酒" label="name" track-by="baseId" :options="baseselected"
                                         :multiple="true" :taggable="true" @@tag="addTag"></multiselect>
                        </div>
                        <div class="col-12 ">
                            <label class="my-2">折扣：</label>
                            <multiselect v-model="discountvalue" deselect-label="無法移除" track-by="discountId"
                                         label="name" placeholder="請選擇折扣" :options="discountselected" :searchable="false"
                                         :allow-empty="false">
                                <template slot="singleLabel"
                                          slot-scope="{ option }"><strong>{{option.name}}</strong> </template>
                            </multiselect>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row m-0">
                    <button class=" col btneaddcancel m-1" type="button" data-bs-dismiss="modal"><i class="fa-solid fa-square-xmark"></i> 離開編輯</button>
                    <button class=" col btneditproducts m-1" type="button" v-on:click="send"><i class="fa-solid fa-square-check"></i> 儲存編輯</button>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    let prod = new Vue({
        el: "#prod",
        data:{
            product:[],
            vueid: "",
            imagesrc: "",
            name: "",
            cost:"",
            price:"",
            discount:{
                discountId:"",
                discountName:""
            },
            description: "",
            discountOpt: [
                { discountId: '1', discountName: 'default' },
                { discountId: '2', discountName: 'regular' },
                { discountId: '3' ,discountName: 'bronze' },
                { discountId: '4', discountName: 'silver' },
                { discountId: '5', discountName: 'golden' },
                { discountId: '6' ,discountName: 'earlybird' }
            ],
        },
        components: {
            Multiselect: window.VueMultiselect.default
        },
        
        methods: {
            seleEdit: function (e) {
                this.vueid = e.currentTarget.id;
                var item = this.product[this.vueid - 1];
                this.test = this.product[this.vueid - 1];
                this.imagesrc = item.path;
                this.name = item.name;
                this.cost = item.cost;
                this.price = item.price;
                this.description = item.description;
                this.discount.discountId = item.discountId;
                this.discount.discountName = item.discountName;
            },
            send: function () {
                let data = new FormData();
                data.append("ProductName", this.createProductData.productName)
                data.append("Cost", this.createProductData.productCost)
                data.append("UnitPrice", this.createProductData.productPrice)
                data.append("ProductDescription", this.createProductData.productDescription)
                var img = this.$refs.myVueDropzone.getQueuedFiles();
                img.forEach(x => data.append("Images", x));
                this.$refs.myVueDropzone.removeAllFiles();
                this.createProductData.productName = "";
                this.createProductData.productPrice = "";
                this.createProductData.productCost = "";
                this.createProductData.productDescription = "";
                this.createProductData.images = [];

                fetch("/api/Products/CreateProduct", {
                    method: 'POST',
                    //headers: { "Content-Type": "multipart/form-data" },
                    body: data
                })
            }
        },
        created: function () {
            let self = this;
            fetch("/api/Products/GetAllBackProducts")
                .then((response) => response.json())
                .then((result) => self.product = result)
        }
    })
    let app = new Vue({
        el: "#staticBackdrop",
        data: {
            createProductData: {
                productName: "",
                productPrice: "",
                productCost: "",
                productDescription: "",
                images: [],
                

            },
            fileRecords: [
                {
                    "name": "Some Invalid.exe",
                    "size": 8165824,
                    "type": "application/vnd.microsoft.portable-executable",
                    "ext": "exe",
                },
                {
                    "name": "Golf.mp4",
                    "lastModified": 1576563996233,
                    "sizeText": "549 KB",
                    "size": 561813,
                    "type": "video/mp4",
                    "ext": "mp4",
                    "dimensions": {
                        "width": 640,
                        "height": 360
                    },
                    "url": "https://safrazik.github.io/vue-file-agent/website/assets/files/Golf.mp4",
                    "videoThumbnail": "https://safrazik.github.io/vue-file-agent/website/assets/files/Golf-thumb.jpg",
                    "imageColor": [66, 62, 45]
                },
                {
                    "name": "Some Large File.zip",
                    "size": 25165824, // 24 MB
                    "type": "application/zip",
                    "ext": "zip",
                },
            ],
            dropzoneOptions: {
                url: 'https://httpbin.org/post',
                thumbnailWidth: 150,
                maxFilesize: 0.5,
                autoProcessQueue: false,
                addRemoveLinks: true,
                headers: { "My-Awesome-Header": "header value" }
            },
            baseselected: [
                { name: 'Tequila', baseId: '1' },
                { name: 'Rum', baseId: '2' },
                { name: 'Gin', baseId: '3' },
                { name: 'Brandy', baseId: '4' },
                { name: 'Wiskey', baseId: '5' },
                { name: 'Vodka', baseId: '6' },
            ],
            discountselected: [
                { name: '原價', discountId: '1' },
                { name: '8折', discountId: '2' },
                { name: '7折', discountId: '3' }
            ],
            basevalue: "",
            discountvalue: "",
        },
        components: {
            "vueDropzone": vue2Dropzone,
            Multiselect: window.VueMultiselect.default
        },
        methods: {
            fileAdd: function (file) {
                document.querySelectorAll(".dz-progress").forEach(x => x.remove())
            },
            send: function () {
                let data = new FormData();
                data.append("ProductName", this.createProductData.productName)
                data.append("Cost", this.createProductData.productCost)
                data.append("UnitPrice", this.createProductData.productPrice)
                data.append("ProductDescription", this.createProductData.productDescription)
                var img = this.$refs.myVueDropzone.getQueuedFiles();
                img.forEach(x => data.append("Images", x));
                this.$refs.myVueDropzone.removeAllFiles();
                this.createProductData.productName = "";
                this.createProductData.productPrice = "";
                this.createProductData.productCost = "";
                this.createProductData.productDescription = "";
                this.createProductData.images = [];

                fetch("/api/Products/CreateProduct", {
                    method: 'POST',
                    //headers: { "Content-Type": "multipart/form-data" },
                    body: data
                })
            },
            addTag(newTag) {
                const tag = {
                    name: newTag,
                    code: newTag.substring(0, 2) + Math.floor((Math.random() * 10000000))
                }
                this.options.push(tag)
                this.value.push(tag)
            }
        }
    })
</script>