@{
ViewData["Title"] = "顧客滿意度調查";
Layout = "_LayoutMobile";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.2/dist/sweetalert2.min.css">
<style>
    body {
        color: aliceblue;
        background-color: #222220;
    }

    .datepicker {
        width: 100%;
        height: 38px;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        padding: 6px 12px 6px 12px;
    }

    h2 {
        text-align: center;
        padding: 50px 0px 30px 0px;
        color: white;
    }

    h5 {
        margin: 10px 0 10px 0;
        font-size: medium;
    }

    p {
        text-align: center;
    }

    span {
        color: red;
    }

    :disabled{
        background: #666;
    }

    .check-area {
        border: 1px solid #D8CDB9;
        padding: 20px 0px 20px 0px;
        border-radius: 0.375rem;
        color: white;
    }

    .inputform div {
        text-align: left;
        margin: 0 5% 0 5%;
    }

    .inputform input {
        border: 1px solid #D8CDB9;
        border-radius: 0.375rem;
    }

    .detaildata {
        border: 1px solid #D8CDB9;
        border-radius: 0.375rem;
        width: 100%;
        height: 200px;
    }

    label {
        padding: 5px 10px 5px 0;
    }

    .input-btn {
        margin: 0;
    }

    .inpName, .inpEmail, .inpDetail {
        padding: 6px 12px 6px 12px;
        width: 100%;
    }

    .satisfaction {
        line-height: 34px;
    }
    /*star*/
    .star-widget input {
        display: none;
    }

    .star-widget label {
        color: #999;
        float: right;
        transition: all 0.2s ease;
    }

    .star-widget input:not(:checked) ~ label:hover,
    .star-widget input:not(:checked) ~ label:hover ~ label,
    .star-widget input:checked ~ label {
        color: #fd4;
    }

    /*button*/
    .btn-return, .btn-submit {
        border: 0;
        border-radius: 0.375rem;
        width: 100%;
        height: 38px;
        display: inline;
    }

    .btn-return {
        background-color: white;
        color: #222220;
    }

    .btn-submit {
        background-color: #721B29;
        color: white;
    }

        .btn-submit:active, .btn-return:active {
            background-color: #C28C2E;
            color: #222220;
        }

</style>

<h2>顧客滿意度調查</h2>
<p class="container">本問卷蒐集之資訊僅作為內部服務改善使用，</br>絕不外洩或另作其他用途，敬請放心填寫。</p>
<div class="container col-10 col-xl-6 check-area" id="d1">
    <div class="inputform">
        <template v-if="memberInfo.memberName == 'guestonly123' ">
            <div>
                <h5>姓名 <span>*</span></h5>
                <input type="text" id="name" class="inpName" v-model="feedbackInfo.Name" maxlength="20" required>
            </div>
            <div>
                <h5>Email <span>*</span></h5>
                <input type="email" id="Email" class="inpEmail" v-model="feedbackInfo.Email" required>
            </div>
            <hr>
            <div>
                <h5>年齡 <span>*</span></h5>
                <div class="row m-0">
                    <div v-for="item in age" class="col-4 m-0 p-0">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Age" name="Age" required>
                        <label :for="item.id">{{item.txt}}</label>
                    </div>
                </div>
            </div>
        </template>
        <template v-else>
            <div>
                <h5>姓名 <span>*</span></h5>
                <input type="text" id="name" class="inpName" v-model="memberInfo.memberName" disabled>
            </div>
            <div>
                <h5>Email <span>*</span></h5>
                <input type="email" id="Email" class="inpEmail" v-model="memberInfo.email" disabled>
            </div>
            <hr>
            <div>
                <h5>年齡 <span>*</span></h5>
                <div class="row m-0">
                    <div v-for="item in age" class="col-4 m-0 p-0">
                        <input type="radio" :id="item.id" :value="item.value" v-model="memberInfo.age" name="Age" disabled>
                        <label :for="item.id">{{item.txt}}</label>
                    </div>
                </div>
            </div>
        </template>
        <hr>
        <div>
            <h5>請問您是第幾次光臨本店 <span>*</span></h5>
            <div class="row m-0">
                <div v-for="item in freq" class="col-6 m-0 p-0">
                    <input type="radio" :id="item.value" :value="item.value" v-model="feedbackInfo.Freq" name="Frequency" required>
                    <label :for="item.value">{{item.txt}}</label>
                </div>
            </div>
        </div>
        <hr>
        <div>
            <h5>請問您今日用餐滿意度</h5>
            <div class="row">
                <div class="satisfaction col-3 m-0">環境<span>*</span></div>
                <div class="col-9 m-0 star-widget">
                    <template v-for="item in env">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Environment"  equired>
                        <label :for="item.id"><i class="fa-solid fa-star"></i></label>
                    </template>
                </div>
                <div class="satisfaction col-3 m-0">服務<span>*</span></div>
                <div class="col-9 m-0 star-widget">
                    <template v-for="item in serve">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Serve"  required>
                        <label :for="item.id"><i class="fa-solid fa-star"></i></label>
                    </template>
                </div>
                <div class="satisfaction col-3 m-0">餐點<span>*</span></div>
                <div class="col-9 m-0 star-widget">
                    <template v-for="item in dish">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Dish"  required>
                        <label :for="item.id"><i class="fa-solid fa-star"></i></label>
                    </template>
                </div>
                <div class="satisfaction col-3 m-0">價位<span>*</span></div>
                <div class="col-9 m-0 star-widget">
                    <template v-for="item in price">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Price"  required>
                        <label :for="item.id"><i class="fa-solid fa-star"></i></label>
                    </template>
                </div>
                <div class="satisfaction col-3 m-0">整體<span>*</span></div>
                <div class="col-9 m-0 star-widget">
                    <template v-for="item in overall">
                        <input type="radio" :id="item.id" :value="item.value" v-model="feedbackInfo.Overall"  required>
                        <label :for="item.id"><i class="fa-solid fa-star"></i></label>
                    </template>
                </div>
            </div>
        </div>
        <hr>
        <div>
            <h5 for="detail">其他建議: </h5>
            <input type="text" id="detail" class="inpDetail" v-model="feedbackInfo.Suggestion">
        </div>
        <hr>
        <div class="input-btn">
            <div class="row m-0">
                <!-- <button class=" col btn-return m-1" type="button">取消</button> -->
                <button class="col btn-submit" type="submit" v-on:click="feedbackSumit">送出</button>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.5.2/dist/sweetalert2.min.js"></script>
<script>
    var app = new Vue({
        el: '#d1',
        data: {
            memberInfo:{},
            age: [
                { value: 18, txt: '18-19歲' },
                { value: 20, txt: '20-29歲' },
                { value: 30, txt: '30-39歲' },
                { value: 40, txt: '40-49歲' },
                { value: 50, txt: '50-59歲' },
                { value: 60, txt: '60歲以上' }
            ],
            freq: [
                { value: 1, txt: '第1次' },
                { value: 2, txt: '第2-3次' },
                { value: 4, txt: '第4-6次' },
                { value: 7, txt: '7次以上' },
            ],
            env: [
                { value: 5, id:'env5' }, 
                { value: 4, id:'env4' }, 
                { value: 3, id:'env3' }, 
                { value: 2, id:'env2' }, 
                { value: 1, id:'env1' }
            ],
            serve: [
                { value: 5, id: 'serve5' },
                { value: 4, id: 'serve4' },
                { value: 3, id: 'serve3' },
                { value: 2, id: 'serve2' },
                { value: 1, id: 'serve1' }
            ],
            dish: [
                { value: 5, id: 'dish5' },
                { value: 4, id: 'dish4' },
                { value: 3, id: 'dish3' },
                { value: 2, id: 'dish2' },
                { value: 1, id: 'dish1' }
            ],
            price: [
                { value: 5, id: 'price5' },
                { value: 4, id: 'price4' },
                { value: 3, id: 'price3' },
                { value: 2, id: 'price2' },
                { value: 1, id: 'price1' }
            ],
            overall: [
                { value: 5, id: 'overall5' },
                { value: 4, id: 'overall4' },
                { value: 3, id: 'overall3' },
                { value: 2, id: 'overall2' },
                { value: 1, id: 'overall1' }
            ],
            feedbackInfo: {
                orderId: @ViewBag.order,
                Name:'',
                Email:'',
                Age: null,
                Freq: null,
                Environment: null,
                Serve:null,
                Dish: null,
                Price:null,
                Overall: null,
                Suggestion:'',
            },
        },
        watch:{
            'memberInfo.memberName': function(){
                if (this.memberInfo.memberName != 'guestonly123')
                    this.feedbackInfo.Name = this.memberInfo.memberName;
            },
            'memberInfo.email': function(){
                if (this.memberInfo.memberName != 'guestonly123')
                    this.feedbackInfo.Email = this.memberInfo.email;
            },
            'memberInfo.age':function(){
                if (this.memberInfo.memberName != 'guestonly123')
                    this.feedbackInfo.Age = this.memberInfo.age;
            }
        },
        methods:{
            memberAge: function (age) {
                let ageValue;
                switch (parseInt(age / 10)) {
                    case 1: ageValue = 18; break;
                    case 2: ageValue = 20; break;
                    case 3: ageValue = 30; break;
                    case 4: ageValue = 40; break;
                    case 5: ageValue = 50; break;
                    default: ageValue = 60; break;
                }
                return ageValue;
            },
            feedbackSumit:function(){
                let info = {
                    OrderId: this.feedbackInfo.orderId.toString(),
                    FeedbackName: this.feedbackInfo.Name,
                    Email: this.feedbackInfo.Email,
                    Age: this.feedbackInfo.Age,
                    Freq: this.feedbackInfo.Freq,
                    Environment: this.feedbackInfo.Environment,
                    Serve: this.feedbackInfo.Serve,
                    Dish: this.feedbackInfo.Dish,
                    Price: this.feedbackInfo.Price,
                    Overall: this.feedbackInfo.Overall,
                    Suggestion: this.feedbackInfo.Suggestion,
                }
                fetch('https://localhost:7232/api/Order/FeedBackAll', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(info)
                }).then(response => response.json())
                    .then(result => window.location.assign(result.url))
            },
            Initialdata:function(){
                let self = this;
                let info = {
                    Id: self.feedbackInfo.orderId.toString(),
                }
                fetch('https://localhost:7232/api/Order/FeedbackMember', {
                    method:'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(info)
                })
                .then(response => response.json())
                .then(result => {
                    self.memberInfo = {
                            orderId: result.orderId,
                            memberName : result.memberName,
                            email: result.email,
                            age: self.memberAge(result.age),
                    }
                })  
            }
        },
        mounted:function(){
            this.Initialdata();
        }
    });
</script>