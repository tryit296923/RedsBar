@{
    ViewData["Title"] = "購物車";
    Layout = "_LayoutMobile";
}

<style>
    body {
        overflow: hidden;
    }

    .topnavbar {
        position: sticky;
        top: 0px;
    }

    .img-box img {
        padding: 20px 0;
        height: 80%;
        width: 100%;
    }

    .userarea {
        position: relative;
        top: -1.5vh;
    }

    .scrollregion {
        height: 86vh;
        overflow: scroll;
        overflow-x: hidden;
    }

    .title {
        color: white;
        position: absolute;
        top: 0px;
    }

        .title p {
            display: inline;
        }

    .himessage {
        text-align: end;
        padding-right: 20%;
    }

    .user {
        color: white;
        text-align: right;
    }

    fieldset {
        font-family: sans-serif;
        border: 3px solid #D8CDB9;
        background: white;
        border-radius: 0.375rem;
        padding: 15px;
    }

        fieldset legend {
            background: #C28C2E;
            color: white;
            font-size: 20px;
            border-radius: 0.375rem;
            box-shadow: 0 0 0 3px #D8CDB9;
            width: 40%;
            margin-left: 5%;
            float: none;
            display: flex;
            justify-content: center;
            align-items: center;
        }

    .cartList {
        border-radius: 0.375rem;
    }

    .list-group-item,
    .cartTotal {
        color: #222220;
    }

    .productName {
        font-size: 1.25rem;
    }

    .originalPrice {
        text-decoration: line-through;
    }

    .discountPrice {
        color: darkred;
    }

    .btnDelete {
        border: none;
        background-color: transparent;
        font-size: 1.4rem;
        line-height: 1rem;
        border-radius: 0.25em;
    }

        .btnDelete:active {
            background-color: #721B29;
            color: white;
        }

    .btnCount {
        border: none;
        background-color: transparent;
        border-radius: 0.25em;
    }

        .btnCount:active {
            background-color: #D8CDB9;
        }

    .align-items-start {
        display: flex !important;
        align-items: center !important;
    }

    .cartTotal {
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 20px;
        font-weight: bold;
    }

    .orderCheck {
        width: 100%;
        position: sticky;
        bottom: 0%;
        background-color: #222220;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.3rem;
        height: 7vh;
    }

    .bottombtntext {
        border: none;
        border-radius: 0.375rem;
        font-weight: bold;
    }

    .btnBacktoMenu {
        font-size: inherit;
        background-color: #D8CDB9;
        color: #222220;
    }

    .btnModalCancel {
        background-color: #D8CDB9;
        color: #222220;
    }

        .btnBacktoMenu:active,
        .btnModalCancel:active {
            background-color: #C28C2E;
            color: white;
        }

    .btnCartConfirm,
    .btnModalConfirm {
        background-color: #721B29;
        color: white;
    }

        .btnCartConfirm:active,
        .btnModalConfirm:active {
            background-color: #C28C2E;
        }

    .btnInModal {
        border: none;
        border-radius: 0.375rem;
        width: 90px;
        display: flex;
        justify-content: center;
        height: 30px;
        align-items: center;
    }

    [v-cloak] {
        display: none;
    }
</style>
<div id="cartList" v-cloak>
    <!-- navbar -->
    <div class="topnavbar">
        <nav class="navbar navbar-expand-lg">
            <div class="container-fluid">
                <a asp-controller="Home" asp-action="Index"><img src="~/images/icons/logo-w.png" alt="" class="logo"></a>
                <button class="navbar-toggler collapsed" type="button" data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link" href="#">推薦</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">經典酒款</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">算命調酒</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">線上訂位</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </div>

    <div class="scrollregion">
        <loading :active.sync="isLoading"></loading>
        <div>
            <!-- banner -->
            <div class="backColor container-fluid mb-3">
                <div class="img-box">
                    <img src="/images/BackGround/cartbanner.jpg" />
                </div>
            </div>
            <!-- 標題 -->
            <div class="container col userarea">
                <div class="title w-100">
                    <div class="himessage">
                        <p>Hi, </p>
                        <p class="user">{{cartInfo.memberName}}</p>
                    </div>
                </div>
            </div>
        </div>

        <fieldset class="mx-3 my-4" v-if="itemList.length>0">
            <legend class="p-3">
                <div>
                    <i class="fa-sharp fa-solid fa-cart-shopping"></i>
                    <b>購物車</b>
                </div>
            </legend>
            <!-- 購物車清單 -->
            <div class="container-fluid">
                <div class="cartList" v-for="(item,index) in itemList" v-bind:key="item.id">
                    <ol class="list-group">
                        <li class="row list-group-item d-flex justify-content-between align-items-start">
                            <div class="col-3 px-0">
                                <img :src="item.path" class="w-100 rounded">
                            </div>
                            <div class="col-5 px-0">
                                <div class="ms-2 me-auto">
                                    <div class="fw-bold productName">{{item.productName}}</div>
                                    <div v-if="item.discountAmount != 1">
                                        <span>$ </span>
                                        <span class="originalPrice">{{item.unitPrice * item.qty}} </span>
                                        <span class="discountPrice" name="finalPrice">{{discountPrice(item)}}</span>
                                    </div>
                                    <div v-else>
                                        <span>$ </span>
                                        <span name="finalPrice">{{item.unitPrice * item.qty}} </span>
                                    </div>
                                </div>
                            </div>
                            <div class="row col-4 px-0">
                                <div class="col-6 text-center px-0">
                                    <button class="btnCount" v-on:click="increase(item)">▲</button>
                                    <div>{{item.qty}}</div>
                                    <button class="btnCount" v-on:click="decrease(item)">▼</button>
                                </div>
                                <div class="col-6 text-center d-flex align-items-center justify-content-center">
                                    <div>
                                        <button class="btnDelete" v-on:click="deleteItem(index)">
                                            <i class="fa-sharp fa-solid fa-xmark"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </li>
                    </ol>
                </div>
                <form action="Success" method="post" class="d-none" id="cart">
                    <input name="orderId" v-model="orderId" />
                    <button type="submit" ref="orderingSend"></button>
                </form>
                <form action="OrderList" method="post" class="d-none">
                    <button type="submit" ref="backToMenu"></button>
                </form>
            </div>
            <hr>
            <div class="cartTotal">此筆訂單總額: {{cartTotal()}} 元</div>
        </fieldset>
    </div>

    <!-- 底部按鈕 -->
    <div class="orderCheck my-3">
        <div class="container row w-100">
            <div class="col col-xl-6 text-center">
                <button class="bottombtntext btnBacktoMenu w-100 py-2" v-on:click="backToMenu">
                    加點商品
                </button>
            </div>
            <div class="col col-xl-6 text-center">
                <button type="button" class="bottombtntext btnCartConfirm w-100 py-2" data-bs-toggle="modal"
                        data-bs-target="#delieveBackdrop">
                    送出訂單
                </button>
            </div>
        </div>
    </div>

    <!-- Modal -->
    <div class="modal fade" id="delieveBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
         aria-labelledby="delieveBackdropLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="delieveBackdropLabel">訂單送出提示</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    確認訂單無誤並送出?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btnInModal btnModalCancel" data-bs-dismiss="modal">取消</button>
                    <button class="btnInModal btnModalConfirm" v-on:click="confirmSend">確認送出</button>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue-loading-overlay@3"></script>
<link href="https://cdn.jsdelivr.net/npm/vue-loading-overlay@3/dist/vue-loading.css" rel="stylesheet">
<script>
    Vue.component('loading', VueLoading);
    var app = new Vue({
        el: '#cartList',
        data() {
            return {
                orderTime: '',
                itemList: [],
                orderId: '',
                cartInfo: {},
                isLoading: false,
            }
        },
        components: {
            Loading: VueLoading
        },
        methods: {
            decrease: function (item) {
                //console.log(item);
                if (item.qty > 1) {
                    item.qty--;
                    var de = this.itemList.find(x => x.id == item.id)
                    de.qty = item.qty
                    console.log(this.itemList)
                }
            },
            increase: function (item) {
                //console.log(item);
                item.qty++;
                var inc = this.itemList.find(y => y.id == item.id)
                inc.qty = item.qty
                console.log(this.itemList)
            },
            deleteItem: function (index) {
                //console.log(index);
                this.itemList.splice(index, 1);
                console.log(this.itemList);

            },
            discountPrice: function (item) {
                return Math.round(item.unitPrice * item.qty * item.discountAmount);
            },
            cartTotal: function () {
                var totalprice = 0;
                if (this.itemList) {
                    for (let i = 0; i < this.itemList.length; i++) {
                        totalprice += this.itemList[i].unitPrice * this.itemList[i].qty * this.itemList[i].discountAmount;
                    }
                }
                return Math.round(totalprice);
            },
            orderingSend: function () {
                this.confirmSend();
            },
            confirmSend() {
                let x = {
                    MemberName: '',
                    ItemList: this.itemList,
                    Number: 0,
                    Desk: '',
                }
                fetch("/api/Order/Confirm", {
                    body: JSON.stringify(x),
                    headers: { 'content-type': 'application/json' },
                    method: 'POST'
                })
                    .then(result => result.json())
                    .then(result => {
                        console.log(result);
                        if (result.status == 1) {
                            //console.log(this.orderId);
                            this.orderId = result.orderId;
                            console.log(this.orderId);
                            setTimeout(() => { this.$refs.orderingSend.click() }, 1)
                        }
                    });
            },
            backToMenu: function () {
                console.log(this.itemList)
                this.isLoading = true;
                fetch("/api/Order/ComboOrder", {
                    body: JSON.stringify(this.itemList),
                    headers: { 'content-type': 'application/json' },
                    method: 'POST'
                })
                    .then(result => result.json())
                    .then(result => {
                        this.itemList = result;
                        setTimeout(() => (this.isloading = false), 4000);
                        this.$refs.backToMenu.click();
                    })
            },
            getCartInfo: function () {
                this.isLoading = true;
                fetch("/api/Order/GetCartInfo")
                    .then(response => response.json())
                    .then(result => {
                        this.cartInfo = result;
                        this.isLoading = false;
                    })
                    .then(result => { this.itemList = this.cartInfo.itemList })
            }
        },
        mounted: function () {
            this.getCartInfo();
        }
    })
</script>
